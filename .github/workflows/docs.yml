name: Docs

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  docs:
    runs-on: macos-latest
    steps:
      - name: Checkout code 📂
        uses: actions/checkout@v4
      
      - name: Setup Rye 🌾
        id: setup-rye
        uses: eifinger/setup-rye@v3
        with:
          version: "0.35.0"

      - name: Pin python-version 3.10 📌
        run: rye pin 3.10
      - name: Cache dependencies 📦
        uses: actions/cache@v4
        with:
          path: ./venv
          key: venv-3.10-${{ hashFiles('requirements.lock') }}-${{ hashFiles('requirements-dev.lock') }}

      - name: Install dependencies 🛠️
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          rye sync --no-lock

      - name: Get the README 📝
        run: |
          cp README.md docs/index.md

      - name: Get the ChangeLog 📝
        run: |
          cp changelog.md docs/changelog.md

      - name: Get Version from VERSION file 🏷️
        id: get_version
        run: |
          VERSION=$(grep -m 1 'version = ' pyproject.toml | sed -E 's/.*version = "(.*)"/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Convert Jupyter examples to Markdown 📓➡️📄
        run: |
          for notebook in examples/*.ipynb; do
            jupyter nbconvert --to markdown "$notebook" --output-dir docs/tutorial
          done

      - name: Deploy Documentation 🚀
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          mike deploy --push --branch gh-pages --update-aliases ${VERSION} latest
          mike set-default --push --branch gh-pages latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ env.VERSION }}

      # - name: Push changes to gh-pages 📤
      #   run: |
      #     git config --global user.name "github-actions[bot]"
      #     git config --global user.email "github-actions[bot]@users.noreply.github.com"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     VERSION: ${{ env.VERSION }}
